//************************************************************************************
//*                                                                                  *
//* ===== DO NOT EDIT =====                                                          *
//* Manual changes will be overwritten.                                              *
//* Generated by github.com/boundedinfinity/enumer                                   *
//*                                                                                  *
//************************************************************************************

package banking

import (
	"database/sql/driver"
	"fmt"

	"github.com/boundedinfinity/enumer"
)

type FederalReserveDistrict string

// /////////////////////////////////////////////////////////////////
//  FederalReserveDistrict Stringer implemenation
// /////////////////////////////////////////////////////////////////

func (t FederalReserveDistrict) String() string {
	return string(t)
}

// /////////////////////////////////////////////////////////////////
//  FederalReserveDistrict JSON marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t FederalReserveDistrict) MarshalJSON() ([]byte, error) {
	return enumer.MarshalJSON(t)
}

func (t *FederalReserveDistrict) UnmarshalJSON(data []byte) error {
	return enumer.UnmarshalJSON(data, t, FederalReserveDistricts.Parse)
}

// /////////////////////////////////////////////////////////////////
//  FederalReserveDistrict YAML marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t FederalReserveDistrict) MarshalYAML() (interface{}, error) {
	return enumer.MarshalYAML(t)
}

func (t *FederalReserveDistrict) UnmarshalYAML(unmarshal func(interface{}) error) error {
	return enumer.UnmarshalYAML(unmarshal, t, FederalReserveDistricts.Parse)
}

// /////////////////////////////////////////////////////////////////
//  FederalReserveDistrict SQL Database marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t FederalReserveDistrict) Value() (driver.Value, error) {
	return enumer.Value(t)
}

func (t *FederalReserveDistrict) Scan(value interface{}) error {
	return enumer.Scan(value, t, FederalReserveDistricts.Parse)
}

// /////////////////////////////////////////////////////////////////
//
//  Enumeration
//
// /////////////////////////////////////////////////////////////////

type federalReserveDistricts struct {
	Boston       FederalReserveDistrict
	NewYork      FederalReserveDistrict
	Philadelphia FederalReserveDistrict
	Cleveland    FederalReserveDistrict
	Richmond     FederalReserveDistrict
	Atlanta      FederalReserveDistrict
	Chicago      FederalReserveDistrict
	StLouis      FederalReserveDistrict
	Minneapolis  FederalReserveDistrict
	KansasCity   FederalReserveDistrict
	Dallas       FederalReserveDistrict
	SanFrancisco FederalReserveDistrict
	Values       []FederalReserveDistrict
	Err          error
}

var FederalReserveDistricts = federalReserveDistricts{
	Boston:       FederalReserveDistrict("Boston"),
	NewYork:      FederalReserveDistrict("New York"),
	Philadelphia: FederalReserveDistrict("Philadelphia"),
	Cleveland:    FederalReserveDistrict("Cleveland"),
	Richmond:     FederalReserveDistrict("Richmond"),
	Atlanta:      FederalReserveDistrict("Atlanta"),
	Chicago:      FederalReserveDistrict("Chicago"),
	StLouis:      FederalReserveDistrict("St. Louis"),
	Minneapolis:  FederalReserveDistrict("Minneapolis"),
	KansasCity:   FederalReserveDistrict("Kansas City"),
	Dallas:       FederalReserveDistrict("Dallas"),
	SanFrancisco: FederalReserveDistrict("San Francisco"),
	Err:          fmt.Errorf("invalid FederalReserveDistrict"),
}

func init() {
	FederalReserveDistricts.Values = []FederalReserveDistrict{
		FederalReserveDistricts.Boston,
		FederalReserveDistricts.NewYork,
		FederalReserveDistricts.Philadelphia,
		FederalReserveDistricts.Cleveland,
		FederalReserveDistricts.Richmond,
		FederalReserveDistricts.Atlanta,
		FederalReserveDistricts.Chicago,
		FederalReserveDistricts.StLouis,
		FederalReserveDistricts.Minneapolis,
		FederalReserveDistricts.KansasCity,
		FederalReserveDistricts.Dallas,
		FederalReserveDistricts.SanFrancisco,
	}
}

func (t federalReserveDistricts) newErr(a any, values ...FederalReserveDistrict) error {
	return fmt.Errorf(
		"invalid %w value '%v'. Must be one of %v",
		FederalReserveDistricts.Err,
		a,
		enumer.Join(values, ", "),
	)
}

func (t federalReserveDistricts) ParseFrom(v string, values ...FederalReserveDistrict) (FederalReserveDistrict, error) {
	var found FederalReserveDistrict
	var ok bool

	for _, value := range values {
		if enumer.IsEq[string, FederalReserveDistrict](v)(value) {
			found = value
			ok = true
			break
		}
	}

	if !ok {
		return found, t.newErr(v, values...)
	}

	return found, nil
}

func (t federalReserveDistricts) Parse(v string) (FederalReserveDistrict, error) {
	return t.ParseFrom(v, FederalReserveDistricts.Values...)
}

func (t federalReserveDistricts) IsFrom(v string, values ...FederalReserveDistrict) bool {
	for _, value := range values {
		if enumer.IsEq[string, FederalReserveDistrict](v)(value) {
			return true
		}
	}
	return false
}

func (t federalReserveDistricts) Is(v string) bool {
	return t.IsFrom(v, FederalReserveDistricts.Values...)
}
