//************************************************************************************
//*                                                                                  *
//* ===== DO NOT EDIT =====                                                          *
//* Manual changes will be overwritten.                                              *
//* Generated by github.com/boundedinfinity/enumer                                   *
//*                                                                                  *
//************************************************************************************

package location

import (
	"database/sql/driver"
	"fmt"

	"github.com/boundedinfinity/enumer"
)

type StateAnsi string

// /////////////////////////////////////////////////////////////////
//  StateAnsi Stringer implemenation
// /////////////////////////////////////////////////////////////////

func (t StateAnsi) String() string {
	return string(t)
}

// /////////////////////////////////////////////////////////////////
//  StateAnsi JSON marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateAnsi) MarshalJSON() ([]byte, error) {
	return enumer.MarshalJSON(t)
}

func (t *StateAnsi) UnmarshalJSON(data []byte) error {
	return enumer.UnmarshalJSON(data, t, StateAnsis.Parse)
}

// /////////////////////////////////////////////////////////////////
//  StateAnsi YAML marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateAnsi) MarshalYAML() (interface{}, error) {
	return enumer.MarshalYAML(t)
}

func (t *StateAnsi) UnmarshalYAML(unmarshal func(interface{}) error) error {
	return enumer.UnmarshalYAML(unmarshal, t, StateAnsis.Parse)
}

// /////////////////////////////////////////////////////////////////
//  StateAnsi SQL Database marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateAnsi) Value() (driver.Value, error) {
	return enumer.Value(t)
}

func (t *StateAnsi) Scan(value interface{}) error {
	return enumer.Scan(value, t, StateAnsis.Parse)
}

// /////////////////////////////////////////////////////////////////
//
//  Enumeration
//
// /////////////////////////////////////////////////////////////////

type stateAnsis struct {
	Alabama                     StateAnsi
	Alaska                      StateAnsi
	AmericanSamoa               StateAnsi
	Arizona                     StateAnsi
	Arkansas                    StateAnsi
	California                  StateAnsi
	Colorado                    StateAnsi
	Connecticut                 StateAnsi
	Delaware                    StateAnsi
	DistrictOfColumbia          StateAnsi
	FederatedStatesOfMicronesia StateAnsi
	Florida                     StateAnsi
	Georgia                     StateAnsi
	Guam                        StateAnsi
	Hawaii                      StateAnsi
	Idaho                       StateAnsi
	Illinois                    StateAnsi
	Indiana                     StateAnsi
	Iowa                        StateAnsi
	Kansas                      StateAnsi
	Kentucky                    StateAnsi
	Louisiana                   StateAnsi
	Maine                       StateAnsi
	MarshallIslands             StateAnsi
	Maryland                    StateAnsi
	Massachusetts               StateAnsi
	Michigan                    StateAnsi
	Minnesota                   StateAnsi
	Mississippi                 StateAnsi
	Missouri                    StateAnsi
	Montana                     StateAnsi
	Nebraska                    StateAnsi
	Nevada                      StateAnsi
	NewHampshire                StateAnsi
	NewJersey                   StateAnsi
	NewMexico                   StateAnsi
	NewYork                     StateAnsi
	NorthCarolina               StateAnsi
	NorthDakota                 StateAnsi
	NorthernMarianaIslands      StateAnsi
	Ohio                        StateAnsi
	Oklahoma                    StateAnsi
	Oregon                      StateAnsi
	Palau                       StateAnsi
	Pennsylvania                StateAnsi
	PuertoRico                  StateAnsi
	RhodeIsland                 StateAnsi
	SouthCarolina               StateAnsi
	SouthDakota                 StateAnsi
	Tennessee                   StateAnsi
	Texas                       StateAnsi
	Utah                        StateAnsi
	Vermont                     StateAnsi
	VirginIslands               StateAnsi
	Virginia                    StateAnsi
	Washington                  StateAnsi
	WestVirginia                StateAnsi
	Wisconsin                   StateAnsi
	Wyoming                     StateAnsi
	Values                      []StateAnsi
	Err                         error
}

var StateAnsis = stateAnsis{
	Alabama:                     StateAnsi("AL"),
	Alaska:                      StateAnsi("AK"),
	AmericanSamoa:               StateAnsi("AS"),
	Arizona:                     StateAnsi("AZ"),
	Arkansas:                    StateAnsi("AR"),
	California:                  StateAnsi("CA"),
	Colorado:                    StateAnsi("CO"),
	Connecticut:                 StateAnsi("CT"),
	Delaware:                    StateAnsi("DE"),
	DistrictOfColumbia:          StateAnsi("DC"),
	FederatedStatesOfMicronesia: StateAnsi("FM"),
	Florida:                     StateAnsi("FL"),
	Georgia:                     StateAnsi("GA"),
	Guam:                        StateAnsi("GU"),
	Hawaii:                      StateAnsi("HI"),
	Idaho:                       StateAnsi("ID"),
	Illinois:                    StateAnsi("IL"),
	Indiana:                     StateAnsi("IN"),
	Iowa:                        StateAnsi("IA"),
	Kansas:                      StateAnsi("KS"),
	Kentucky:                    StateAnsi("KY"),
	Louisiana:                   StateAnsi("LA"),
	Maine:                       StateAnsi("ME"),
	MarshallIslands:             StateAnsi("MH"),
	Maryland:                    StateAnsi("MD"),
	Massachusetts:               StateAnsi("MA"),
	Michigan:                    StateAnsi("MI"),
	Minnesota:                   StateAnsi("MN"),
	Mississippi:                 StateAnsi("MS"),
	Missouri:                    StateAnsi("MO"),
	Montana:                     StateAnsi("MT"),
	Nebraska:                    StateAnsi("NE"),
	Nevada:                      StateAnsi("NV"),
	NewHampshire:                StateAnsi("NH"),
	NewJersey:                   StateAnsi("NJ"),
	NewMexico:                   StateAnsi("NM"),
	NewYork:                     StateAnsi("NY"),
	NorthCarolina:               StateAnsi("NC"),
	NorthDakota:                 StateAnsi("ND"),
	NorthernMarianaIslands:      StateAnsi("MP"),
	Ohio:                        StateAnsi("OH"),
	Oklahoma:                    StateAnsi("OK"),
	Oregon:                      StateAnsi("OR"),
	Palau:                       StateAnsi("PW"),
	Pennsylvania:                StateAnsi("PA"),
	PuertoRico:                  StateAnsi("PR"),
	RhodeIsland:                 StateAnsi("RI"),
	SouthCarolina:               StateAnsi("SC"),
	SouthDakota:                 StateAnsi("SD"),
	Tennessee:                   StateAnsi("TN"),
	Texas:                       StateAnsi("TX"),
	Utah:                        StateAnsi("UT"),
	Vermont:                     StateAnsi("VT"),
	VirginIslands:               StateAnsi("VI"),
	Virginia:                    StateAnsi("VA"),
	Washington:                  StateAnsi("WA"),
	WestVirginia:                StateAnsi("WV"),
	Wisconsin:                   StateAnsi("WI"),
	Wyoming:                     StateAnsi("WY"),
	Err:                         fmt.Errorf("invalid StateAnsi"),
}

func init() {
	StateAnsis.Values = []StateAnsi{
		StateAnsis.Alabama,
		StateAnsis.Alaska,
		StateAnsis.AmericanSamoa,
		StateAnsis.Arizona,
		StateAnsis.Arkansas,
		StateAnsis.California,
		StateAnsis.Colorado,
		StateAnsis.Connecticut,
		StateAnsis.Delaware,
		StateAnsis.DistrictOfColumbia,
		StateAnsis.FederatedStatesOfMicronesia,
		StateAnsis.Florida,
		StateAnsis.Georgia,
		StateAnsis.Guam,
		StateAnsis.Hawaii,
		StateAnsis.Idaho,
		StateAnsis.Illinois,
		StateAnsis.Indiana,
		StateAnsis.Iowa,
		StateAnsis.Kansas,
		StateAnsis.Kentucky,
		StateAnsis.Louisiana,
		StateAnsis.Maine,
		StateAnsis.MarshallIslands,
		StateAnsis.Maryland,
		StateAnsis.Massachusetts,
		StateAnsis.Michigan,
		StateAnsis.Minnesota,
		StateAnsis.Mississippi,
		StateAnsis.Missouri,
		StateAnsis.Montana,
		StateAnsis.Nebraska,
		StateAnsis.Nevada,
		StateAnsis.NewHampshire,
		StateAnsis.NewJersey,
		StateAnsis.NewMexico,
		StateAnsis.NewYork,
		StateAnsis.NorthCarolina,
		StateAnsis.NorthDakota,
		StateAnsis.NorthernMarianaIslands,
		StateAnsis.Ohio,
		StateAnsis.Oklahoma,
		StateAnsis.Oregon,
		StateAnsis.Palau,
		StateAnsis.Pennsylvania,
		StateAnsis.PuertoRico,
		StateAnsis.RhodeIsland,
		StateAnsis.SouthCarolina,
		StateAnsis.SouthDakota,
		StateAnsis.Tennessee,
		StateAnsis.Texas,
		StateAnsis.Utah,
		StateAnsis.Vermont,
		StateAnsis.VirginIslands,
		StateAnsis.Virginia,
		StateAnsis.Washington,
		StateAnsis.WestVirginia,
		StateAnsis.Wisconsin,
		StateAnsis.Wyoming,
	}
}

func (t stateAnsis) newErr(a any, values ...StateAnsi) error {
	return fmt.Errorf(
		"invalid %w value '%v'. Must be one of %v",
		StateAnsis.Err,
		a,
		enumer.Join(values, ", "),
	)
}

func (t stateAnsis) ParseFrom(v string, values ...StateAnsi) (StateAnsi, error) {
	var found StateAnsi
	var ok bool

	for _, value := range values {
		if enumer.IsEq[string, StateAnsi](v)(value) {
			found = value
			ok = true
			break
		}
	}

	if !ok {
		return found, t.newErr(v, values...)
	}

	return found, nil
}

func (t stateAnsis) Parse(v string) (StateAnsi, error) {
	return t.ParseFrom(v, StateAnsis.Values...)
}

func (t stateAnsis) IsFrom(v string, values ...StateAnsi) bool {
	for _, value := range values {
		if enumer.IsEq[string, StateAnsi](v)(value) {
			return true
		}
	}
	return false
}

func (t stateAnsis) Is(v string) bool {
	return t.IsFrom(v, StateAnsis.Values...)
}
