//************************************************************************************
//*                                                                                  *
//* ===== DO NOT EDIT =====                                                          *
//* Manual changes will be overwritten.                                              *
//* Generated by github.com/boundedinfinity/enumer                                   *
//*                                                                                  *
//************************************************************************************

package location

import (
	"database/sql/driver"
	"fmt"

	"github.com/boundedinfinity/enumer"
)

type StateIso string

// /////////////////////////////////////////////////////////////////
//  StateIso Stringer implemenation
// /////////////////////////////////////////////////////////////////

func (t StateIso) String() string {
	return string(t)
}

// /////////////////////////////////////////////////////////////////
//  StateIso JSON marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateIso) MarshalJSON() ([]byte, error) {
	return enumer.MarshalJSON(t)
}

func (t *StateIso) UnmarshalJSON(data []byte) error {
	return enumer.UnmarshalJSON(data, t, StateIsos.Parse)
}

// /////////////////////////////////////////////////////////////////
//  StateIso YAML marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateIso) MarshalYAML() (interface{}, error) {
	return enumer.MarshalYAML(t)
}

func (t *StateIso) UnmarshalYAML(unmarshal func(interface{}) error) error {
	return enumer.UnmarshalYAML(unmarshal, t, StateIsos.Parse)
}

// /////////////////////////////////////////////////////////////////
//  StateIso SQL Database marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t StateIso) Value() (driver.Value, error) {
	return enumer.Value(t)
}

func (t *StateIso) Scan(value interface{}) error {
	return enumer.Scan(value, t, StateIsos.Parse)
}

// /////////////////////////////////////////////////////////////////
//
//  Enumeration
//
// /////////////////////////////////////////////////////////////////

type stateIsos struct {
	Alabama                     StateIso
	Alaska                      StateIso
	AmericanSamoa               StateIso
	Arizona                     StateIso
	Arkansas                    StateIso
	California                  StateIso
	Colorado                    StateIso
	Connecticut                 StateIso
	Delaware                    StateIso
	DistrictOfColumbia          StateIso
	FederatedStatesOfMicronesia StateIso
	Florida                     StateIso
	Georgia                     StateIso
	Guam                        StateIso
	Hawaii                      StateIso
	Idaho                       StateIso
	Illinois                    StateIso
	Indiana                     StateIso
	Iowa                        StateIso
	Kansas                      StateIso
	Kentucky                    StateIso
	Louisiana                   StateIso
	Maine                       StateIso
	MarshallIslands             StateIso
	Maryland                    StateIso
	Massachusetts               StateIso
	Michigan                    StateIso
	Minnesota                   StateIso
	Mississippi                 StateIso
	Missouri                    StateIso
	Montana                     StateIso
	Nebraska                    StateIso
	Nevada                      StateIso
	NewHampshire                StateIso
	NewJersey                   StateIso
	NewMexico                   StateIso
	NewYork                     StateIso
	NorthCarolina               StateIso
	NorthDakota                 StateIso
	NorthernMarianaIslands      StateIso
	Ohio                        StateIso
	Oklahoma                    StateIso
	Oregon                      StateIso
	Palau                       StateIso
	Pennsylvania                StateIso
	PuertoRico                  StateIso
	RhodeIsland                 StateIso
	SouthCarolina               StateIso
	SouthDakota                 StateIso
	Tennessee                   StateIso
	Texas                       StateIso
	Utah                        StateIso
	Vermont                     StateIso
	VirginIslands               StateIso
	Virginia                    StateIso
	Washington                  StateIso
	WestVirginia                StateIso
	Wisconsin                   StateIso
	Wyoming                     StateIso
	Values                      []StateIso
	Err                         error
}

var StateIsos = stateIsos{
	Alabama:                     StateIso("US-AL"),
	Alaska:                      StateIso("US-AK"),
	AmericanSamoa:               StateIso("US-AS"),
	Arizona:                     StateIso("US-AZ"),
	Arkansas:                    StateIso("US-AR"),
	California:                  StateIso("US-CA"),
	Colorado:                    StateIso("US-CO"),
	Connecticut:                 StateIso("US-CT"),
	Delaware:                    StateIso("US-DE"),
	DistrictOfColumbia:          StateIso("US-DC"),
	FederatedStatesOfMicronesia: StateIso("US-FM"),
	Florida:                     StateIso("US-FL"),
	Georgia:                     StateIso("US-GA"),
	Guam:                        StateIso("US-GU"),
	Hawaii:                      StateIso("US-HI"),
	Idaho:                       StateIso("US-ID"),
	Illinois:                    StateIso("US-IL"),
	Indiana:                     StateIso("US-IN"),
	Iowa:                        StateIso("US-IA"),
	Kansas:                      StateIso("US-KS"),
	Kentucky:                    StateIso("US-KY"),
	Louisiana:                   StateIso("US-LA"),
	Maine:                       StateIso("US-ME"),
	MarshallIslands:             StateIso("US-MH"),
	Maryland:                    StateIso("US-MD"),
	Massachusetts:               StateIso("US-MA"),
	Michigan:                    StateIso("US-MI"),
	Minnesota:                   StateIso("US-MN"),
	Mississippi:                 StateIso("US-MS"),
	Missouri:                    StateIso("US-MO"),
	Montana:                     StateIso("US-MT"),
	Nebraska:                    StateIso("US-NE"),
	Nevada:                      StateIso("US-NV"),
	NewHampshire:                StateIso("US-NH"),
	NewJersey:                   StateIso("US-NJ"),
	NewMexico:                   StateIso("US-NM"),
	NewYork:                     StateIso("US-NY"),
	NorthCarolina:               StateIso("US-NC"),
	NorthDakota:                 StateIso("US-ND"),
	NorthernMarianaIslands:      StateIso("US-MP"),
	Ohio:                        StateIso("US-OH"),
	Oklahoma:                    StateIso("US-OK"),
	Oregon:                      StateIso("US-OR"),
	Palau:                       StateIso("US-PW"),
	Pennsylvania:                StateIso("US-PA"),
	PuertoRico:                  StateIso("US-PR"),
	RhodeIsland:                 StateIso("US-RI"),
	SouthCarolina:               StateIso("US-SC"),
	SouthDakota:                 StateIso("US-SD"),
	Tennessee:                   StateIso("US-TN"),
	Texas:                       StateIso("US-TX"),
	Utah:                        StateIso("US-UT"),
	Vermont:                     StateIso("US-VT"),
	VirginIslands:               StateIso("US-VI"),
	Virginia:                    StateIso("US-VA"),
	Washington:                  StateIso("US-WA"),
	WestVirginia:                StateIso("US-WV"),
	Wisconsin:                   StateIso("US-WI"),
	Wyoming:                     StateIso("US-WY"),
	Err:                         fmt.Errorf("invalid StateIso"),
}

func init() {
	StateIsos.Values = []StateIso{
		StateIsos.Alabama,
		StateIsos.Alaska,
		StateIsos.AmericanSamoa,
		StateIsos.Arizona,
		StateIsos.Arkansas,
		StateIsos.California,
		StateIsos.Colorado,
		StateIsos.Connecticut,
		StateIsos.Delaware,
		StateIsos.DistrictOfColumbia,
		StateIsos.FederatedStatesOfMicronesia,
		StateIsos.Florida,
		StateIsos.Georgia,
		StateIsos.Guam,
		StateIsos.Hawaii,
		StateIsos.Idaho,
		StateIsos.Illinois,
		StateIsos.Indiana,
		StateIsos.Iowa,
		StateIsos.Kansas,
		StateIsos.Kentucky,
		StateIsos.Louisiana,
		StateIsos.Maine,
		StateIsos.MarshallIslands,
		StateIsos.Maryland,
		StateIsos.Massachusetts,
		StateIsos.Michigan,
		StateIsos.Minnesota,
		StateIsos.Mississippi,
		StateIsos.Missouri,
		StateIsos.Montana,
		StateIsos.Nebraska,
		StateIsos.Nevada,
		StateIsos.NewHampshire,
		StateIsos.NewJersey,
		StateIsos.NewMexico,
		StateIsos.NewYork,
		StateIsos.NorthCarolina,
		StateIsos.NorthDakota,
		StateIsos.NorthernMarianaIslands,
		StateIsos.Ohio,
		StateIsos.Oklahoma,
		StateIsos.Oregon,
		StateIsos.Palau,
		StateIsos.Pennsylvania,
		StateIsos.PuertoRico,
		StateIsos.RhodeIsland,
		StateIsos.SouthCarolina,
		StateIsos.SouthDakota,
		StateIsos.Tennessee,
		StateIsos.Texas,
		StateIsos.Utah,
		StateIsos.Vermont,
		StateIsos.VirginIslands,
		StateIsos.Virginia,
		StateIsos.Washington,
		StateIsos.WestVirginia,
		StateIsos.Wisconsin,
		StateIsos.Wyoming,
	}
}

func (t stateIsos) newErr(a any, values ...StateIso) error {
	return fmt.Errorf(
		"invalid %w value '%v'. Must be one of %v",
		StateIsos.Err,
		a,
		enumer.Join(values, ", "),
	)
}

func (t stateIsos) ParseFrom(v string, values ...StateIso) (StateIso, error) {
	var found StateIso
	var ok bool

	for _, value := range values {
		if enumer.IsEq[string, StateIso](v)(value) {
			found = value
			ok = true
			break
		}
	}

	if !ok {
		return found, t.newErr(v, values...)
	}

	return found, nil
}

func (t stateIsos) Parse(v string) (StateIso, error) {
	return t.ParseFrom(v, StateIsos.Values...)
}

func (t stateIsos) IsFrom(v string, values ...StateIso) bool {
	for _, value := range values {
		if enumer.IsEq[string, StateIso](v)(value) {
			return true
		}
	}
	return false
}

func (t stateIsos) Is(v string) bool {
	return t.IsFrom(v, StateIsos.Values...)
}
