//************************************************************************************
//*                                                                                  *
//* ===== DO NOT EDIT =====                                                          *
//* Manual changes will be overwritten.                                              *
//* Generated by github.com/boundedinfinity/enumer                                   *
//*                                                                                  *
//************************************************************************************

package location

import (
	"database/sql/driver"
	"encoding/xml"
	"fmt"

	"github.com/boundedinfinity/enumer"
)

type CountryAlpha2 string

// /////////////////////////////////////////////////////////////////
//  CountryAlpha2 Stringer implemenation
// /////////////////////////////////////////////////////////////////

func (t CountryAlpha2) String() string {
	return string(t)
}

// /////////////////////////////////////////////////////////////////
//  CountryAlpha2 JSON marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t CountryAlpha2) MarshalJSON() ([]byte, error) {
	return enumer.MarshalJSON(t)
}

func (t *CountryAlpha2) UnmarshalJSON(data []byte) error {
	return enumer.UnmarshalJSON(data, t, CountryAlpha2s.Parse)
}

// /////////////////////////////////////////////////////////////////
//  CountryAlpha2 YAML marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t CountryAlpha2) MarshalYAML() (interface{}, error) {
	return enumer.MarshalYAML(t)
}

func (t *CountryAlpha2) UnmarshalYAML(unmarshal func(interface{}) error) error {
	return enumer.UnmarshalYAML(unmarshal, t, CountryAlpha2s.Parse)
}

// /////////////////////////////////////////////////////////////////
//  CountryAlpha2 XML marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t CountryAlpha2) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return enumer.MarshalXML(t, e, start)
}

func (t *CountryAlpha2) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	return enumer.UnmarshalXML(t, CountryAlpha2s.Parse, d, start)
}

// /////////////////////////////////////////////////////////////////
//  CountryAlpha2 SQL Database marshal/unmarshal implemenation
// /////////////////////////////////////////////////////////////////

func (t CountryAlpha2) Value() (driver.Value, error) {
	return enumer.Value(t)
}

func (t *CountryAlpha2) Scan(value interface{}) error {
	return enumer.Scan(value, t, CountryAlpha2s.Parse)
}

// /////////////////////////////////////////////////////////////////
//
//  Enumeration
//
// /////////////////////////////////////////////////////////////////

type countryAlpha2s struct {
	AF     CountryAlpha2
	AX     CountryAlpha2
	DZ     CountryAlpha2
	AS     CountryAlpha2
	AD     CountryAlpha2
	AO     CountryAlpha2
	AI     CountryAlpha2
	AQ     CountryAlpha2
	AG     CountryAlpha2
	AR     CountryAlpha2
	AM     CountryAlpha2
	AW     CountryAlpha2
	AU     CountryAlpha2
	AT     CountryAlpha2
	AZ     CountryAlpha2
	BS     CountryAlpha2
	BD     CountryAlpha2
	BB     CountryAlpha2
	BY     CountryAlpha2
	BE     CountryAlpha2
	BZ     CountryAlpha2
	BJ     CountryAlpha2
	BM     CountryAlpha2
	BT     CountryAlpha2
	BO     CountryAlpha2
	BQ     CountryAlpha2
	BA     CountryAlpha2
	BW     CountryAlpha2
	BV     CountryAlpha2
	BR     CountryAlpha2
	IO     CountryAlpha2
	BN     CountryAlpha2
	BG     CountryAlpha2
	BF     CountryAlpha2
	BI     CountryAlpha2
	CV     CountryAlpha2
	KH     CountryAlpha2
	CM     CountryAlpha2
	CA     CountryAlpha2
	KY     CountryAlpha2
	CF     CountryAlpha2
	TD     CountryAlpha2
	CL     CountryAlpha2
	CN     CountryAlpha2
	CX     CountryAlpha2
	CC     CountryAlpha2
	CO     CountryAlpha2
	KM     CountryAlpha2
	CG     CountryAlpha2
	CD     CountryAlpha2
	CK     CountryAlpha2
	CR     CountryAlpha2
	CI     CountryAlpha2
	HR     CountryAlpha2
	CU     CountryAlpha2
	CW     CountryAlpha2
	CY     CountryAlpha2
	CZ     CountryAlpha2
	DK     CountryAlpha2
	DJ     CountryAlpha2
	DM     CountryAlpha2
	DO     CountryAlpha2
	EC     CountryAlpha2
	EG     CountryAlpha2
	SV     CountryAlpha2
	GQ     CountryAlpha2
	ER     CountryAlpha2
	EE     CountryAlpha2
	SZ     CountryAlpha2
	ET     CountryAlpha2
	FK     CountryAlpha2
	FO     CountryAlpha2
	FJ     CountryAlpha2
	FI     CountryAlpha2
	FR     CountryAlpha2
	GF     CountryAlpha2
	PF     CountryAlpha2
	TF     CountryAlpha2
	GA     CountryAlpha2
	GM     CountryAlpha2
	GE     CountryAlpha2
	DE     CountryAlpha2
	GH     CountryAlpha2
	GI     CountryAlpha2
	GR     CountryAlpha2
	GL     CountryAlpha2
	GD     CountryAlpha2
	GP     CountryAlpha2
	GU     CountryAlpha2
	GT     CountryAlpha2
	GG     CountryAlpha2
	GN     CountryAlpha2
	GW     CountryAlpha2
	GY     CountryAlpha2
	HT     CountryAlpha2
	HM     CountryAlpha2
	VA     CountryAlpha2
	HN     CountryAlpha2
	HK     CountryAlpha2
	HU     CountryAlpha2
	IS     CountryAlpha2
	IN     CountryAlpha2
	ID     CountryAlpha2
	IR     CountryAlpha2
	IQ     CountryAlpha2
	IE     CountryAlpha2
	IM     CountryAlpha2
	IL     CountryAlpha2
	IT     CountryAlpha2
	JM     CountryAlpha2
	JP     CountryAlpha2
	JE     CountryAlpha2
	JO     CountryAlpha2
	KZ     CountryAlpha2
	KE     CountryAlpha2
	KI     CountryAlpha2
	KP     CountryAlpha2
	KR     CountryAlpha2
	KW     CountryAlpha2
	KG     CountryAlpha2
	LA     CountryAlpha2
	LV     CountryAlpha2
	LB     CountryAlpha2
	LS     CountryAlpha2
	LR     CountryAlpha2
	LY     CountryAlpha2
	LI     CountryAlpha2
	LT     CountryAlpha2
	LU     CountryAlpha2
	MO     CountryAlpha2
	MG     CountryAlpha2
	MW     CountryAlpha2
	MY     CountryAlpha2
	MV     CountryAlpha2
	ML     CountryAlpha2
	MT     CountryAlpha2
	MH     CountryAlpha2
	MQ     CountryAlpha2
	MR     CountryAlpha2
	MU     CountryAlpha2
	YT     CountryAlpha2
	MX     CountryAlpha2
	FM     CountryAlpha2
	MD     CountryAlpha2
	MC     CountryAlpha2
	MN     CountryAlpha2
	ME     CountryAlpha2
	MS     CountryAlpha2
	MA     CountryAlpha2
	MZ     CountryAlpha2
	MM     CountryAlpha2
	NA     CountryAlpha2
	NR     CountryAlpha2
	NP     CountryAlpha2
	NL     CountryAlpha2
	NC     CountryAlpha2
	NZ     CountryAlpha2
	NI     CountryAlpha2
	NE     CountryAlpha2
	NG     CountryAlpha2
	NU     CountryAlpha2
	NF     CountryAlpha2
	MK     CountryAlpha2
	MP     CountryAlpha2
	NO     CountryAlpha2
	OM     CountryAlpha2
	PK     CountryAlpha2
	PW     CountryAlpha2
	PS     CountryAlpha2
	PA     CountryAlpha2
	PG     CountryAlpha2
	PY     CountryAlpha2
	PE     CountryAlpha2
	PH     CountryAlpha2
	PN     CountryAlpha2
	PL     CountryAlpha2
	PT     CountryAlpha2
	PR     CountryAlpha2
	QA     CountryAlpha2
	RE     CountryAlpha2
	RO     CountryAlpha2
	RU     CountryAlpha2
	RW     CountryAlpha2
	BL     CountryAlpha2
	SH     CountryAlpha2
	KN     CountryAlpha2
	LC     CountryAlpha2
	MF     CountryAlpha2
	PM     CountryAlpha2
	VC     CountryAlpha2
	WS     CountryAlpha2
	SM     CountryAlpha2
	ST     CountryAlpha2
	SA     CountryAlpha2
	SN     CountryAlpha2
	RS     CountryAlpha2
	SC     CountryAlpha2
	SL     CountryAlpha2
	SG     CountryAlpha2
	SX     CountryAlpha2
	SK     CountryAlpha2
	SI     CountryAlpha2
	SB     CountryAlpha2
	SO     CountryAlpha2
	ZA     CountryAlpha2
	GS     CountryAlpha2
	SS     CountryAlpha2
	ES     CountryAlpha2
	LK     CountryAlpha2
	SD     CountryAlpha2
	SR     CountryAlpha2
	SJ     CountryAlpha2
	SE     CountryAlpha2
	CH     CountryAlpha2
	SY     CountryAlpha2
	TW     CountryAlpha2
	TJ     CountryAlpha2
	TZ     CountryAlpha2
	TH     CountryAlpha2
	TL     CountryAlpha2
	TG     CountryAlpha2
	TK     CountryAlpha2
	TO     CountryAlpha2
	TT     CountryAlpha2
	TN     CountryAlpha2
	TR     CountryAlpha2
	TM     CountryAlpha2
	TC     CountryAlpha2
	TV     CountryAlpha2
	UG     CountryAlpha2
	UA     CountryAlpha2
	AE     CountryAlpha2
	GB     CountryAlpha2
	UM     CountryAlpha2
	US     CountryAlpha2
	UY     CountryAlpha2
	UZ     CountryAlpha2
	VU     CountryAlpha2
	VE     CountryAlpha2
	VN     CountryAlpha2
	VG     CountryAlpha2
	VI     CountryAlpha2
	WF     CountryAlpha2
	EH     CountryAlpha2
	YE     CountryAlpha2
	ZM     CountryAlpha2
	ZW     CountryAlpha2
	Values []CountryAlpha2
	Err    error
}

var CountryAlpha2s = countryAlpha2s{
	AF:  CountryAlpha2("AF"),
	AX:  CountryAlpha2("AX"),
	DZ:  CountryAlpha2("DZ"),
	AS:  CountryAlpha2("AS"),
	AD:  CountryAlpha2("AD"),
	AO:  CountryAlpha2("AO"),
	AI:  CountryAlpha2("AI"),
	AQ:  CountryAlpha2("AQ"),
	AG:  CountryAlpha2("AG"),
	AR:  CountryAlpha2("AR"),
	AM:  CountryAlpha2("AM"),
	AW:  CountryAlpha2("AW"),
	AU:  CountryAlpha2("AU"),
	AT:  CountryAlpha2("AT"),
	AZ:  CountryAlpha2("AZ"),
	BS:  CountryAlpha2("BS"),
	BD:  CountryAlpha2("BD"),
	BB:  CountryAlpha2("BB"),
	BY:  CountryAlpha2("BY"),
	BE:  CountryAlpha2("BE"),
	BZ:  CountryAlpha2("BZ"),
	BJ:  CountryAlpha2("BJ"),
	BM:  CountryAlpha2("BM"),
	BT:  CountryAlpha2("BT"),
	BO:  CountryAlpha2("BO"),
	BQ:  CountryAlpha2("BQ"),
	BA:  CountryAlpha2("BA"),
	BW:  CountryAlpha2("BW"),
	BV:  CountryAlpha2("BV"),
	BR:  CountryAlpha2("BR"),
	IO:  CountryAlpha2("IO"),
	BN:  CountryAlpha2("BN"),
	BG:  CountryAlpha2("BG"),
	BF:  CountryAlpha2("BF"),
	BI:  CountryAlpha2("BI"),
	CV:  CountryAlpha2("CV"),
	KH:  CountryAlpha2("KH"),
	CM:  CountryAlpha2("CM"),
	CA:  CountryAlpha2("CA"),
	KY:  CountryAlpha2("KY"),
	CF:  CountryAlpha2("CF"),
	TD:  CountryAlpha2("TD"),
	CL:  CountryAlpha2("CL"),
	CN:  CountryAlpha2("CN"),
	CX:  CountryAlpha2("CX"),
	CC:  CountryAlpha2("CC"),
	CO:  CountryAlpha2("CO"),
	KM:  CountryAlpha2("KM"),
	CG:  CountryAlpha2("CG"),
	CD:  CountryAlpha2("CD"),
	CK:  CountryAlpha2("CK"),
	CR:  CountryAlpha2("CR"),
	CI:  CountryAlpha2("CI"),
	HR:  CountryAlpha2("HR"),
	CU:  CountryAlpha2("CU"),
	CW:  CountryAlpha2("CW"),
	CY:  CountryAlpha2("CY"),
	CZ:  CountryAlpha2("CZ"),
	DK:  CountryAlpha2("DK"),
	DJ:  CountryAlpha2("DJ"),
	DM:  CountryAlpha2("DM"),
	DO:  CountryAlpha2("DO"),
	EC:  CountryAlpha2("EC"),
	EG:  CountryAlpha2("EG"),
	SV:  CountryAlpha2("SV"),
	GQ:  CountryAlpha2("GQ"),
	ER:  CountryAlpha2("ER"),
	EE:  CountryAlpha2("EE"),
	SZ:  CountryAlpha2("SZ"),
	ET:  CountryAlpha2("ET"),
	FK:  CountryAlpha2("FK"),
	FO:  CountryAlpha2("FO"),
	FJ:  CountryAlpha2("FJ"),
	FI:  CountryAlpha2("FI"),
	FR:  CountryAlpha2("FR"),
	GF:  CountryAlpha2("GF"),
	PF:  CountryAlpha2("PF"),
	TF:  CountryAlpha2("TF"),
	GA:  CountryAlpha2("GA"),
	GM:  CountryAlpha2("GM"),
	GE:  CountryAlpha2("GE"),
	DE:  CountryAlpha2("DE"),
	GH:  CountryAlpha2("GH"),
	GI:  CountryAlpha2("GI"),
	GR:  CountryAlpha2("GR"),
	GL:  CountryAlpha2("GL"),
	GD:  CountryAlpha2("GD"),
	GP:  CountryAlpha2("GP"),
	GU:  CountryAlpha2("GU"),
	GT:  CountryAlpha2("GT"),
	GG:  CountryAlpha2("GG"),
	GN:  CountryAlpha2("GN"),
	GW:  CountryAlpha2("GW"),
	GY:  CountryAlpha2("GY"),
	HT:  CountryAlpha2("HT"),
	HM:  CountryAlpha2("HM"),
	VA:  CountryAlpha2("VA"),
	HN:  CountryAlpha2("HN"),
	HK:  CountryAlpha2("HK"),
	HU:  CountryAlpha2("HU"),
	IS:  CountryAlpha2("IS"),
	IN:  CountryAlpha2("IN"),
	ID:  CountryAlpha2("ID"),
	IR:  CountryAlpha2("IR"),
	IQ:  CountryAlpha2("IQ"),
	IE:  CountryAlpha2("IE"),
	IM:  CountryAlpha2("IM"),
	IL:  CountryAlpha2("IL"),
	IT:  CountryAlpha2("IT"),
	JM:  CountryAlpha2("JM"),
	JP:  CountryAlpha2("JP"),
	JE:  CountryAlpha2("JE"),
	JO:  CountryAlpha2("JO"),
	KZ:  CountryAlpha2("KZ"),
	KE:  CountryAlpha2("KE"),
	KI:  CountryAlpha2("KI"),
	KP:  CountryAlpha2("KP"),
	KR:  CountryAlpha2("KR"),
	KW:  CountryAlpha2("KW"),
	KG:  CountryAlpha2("KG"),
	LA:  CountryAlpha2("LA"),
	LV:  CountryAlpha2("LV"),
	LB:  CountryAlpha2("LB"),
	LS:  CountryAlpha2("LS"),
	LR:  CountryAlpha2("LR"),
	LY:  CountryAlpha2("LY"),
	LI:  CountryAlpha2("LI"),
	LT:  CountryAlpha2("LT"),
	LU:  CountryAlpha2("LU"),
	MO:  CountryAlpha2("MO"),
	MG:  CountryAlpha2("MG"),
	MW:  CountryAlpha2("MW"),
	MY:  CountryAlpha2("MY"),
	MV:  CountryAlpha2("MV"),
	ML:  CountryAlpha2("ML"),
	MT:  CountryAlpha2("MT"),
	MH:  CountryAlpha2("MH"),
	MQ:  CountryAlpha2("MQ"),
	MR:  CountryAlpha2("MR"),
	MU:  CountryAlpha2("MU"),
	YT:  CountryAlpha2("YT"),
	MX:  CountryAlpha2("MX"),
	FM:  CountryAlpha2("FM"),
	MD:  CountryAlpha2("MD"),
	MC:  CountryAlpha2("MC"),
	MN:  CountryAlpha2("MN"),
	ME:  CountryAlpha2("ME"),
	MS:  CountryAlpha2("MS"),
	MA:  CountryAlpha2("MA"),
	MZ:  CountryAlpha2("MZ"),
	MM:  CountryAlpha2("MM"),
	NA:  CountryAlpha2("NA"),
	NR:  CountryAlpha2("NR"),
	NP:  CountryAlpha2("NP"),
	NL:  CountryAlpha2("NL"),
	NC:  CountryAlpha2("NC"),
	NZ:  CountryAlpha2("NZ"),
	NI:  CountryAlpha2("NI"),
	NE:  CountryAlpha2("NE"),
	NG:  CountryAlpha2("NG"),
	NU:  CountryAlpha2("NU"),
	NF:  CountryAlpha2("NF"),
	MK:  CountryAlpha2("MK"),
	MP:  CountryAlpha2("MP"),
	NO:  CountryAlpha2("NO"),
	OM:  CountryAlpha2("OM"),
	PK:  CountryAlpha2("PK"),
	PW:  CountryAlpha2("PW"),
	PS:  CountryAlpha2("PS"),
	PA:  CountryAlpha2("PA"),
	PG:  CountryAlpha2("PG"),
	PY:  CountryAlpha2("PY"),
	PE:  CountryAlpha2("PE"),
	PH:  CountryAlpha2("PH"),
	PN:  CountryAlpha2("PN"),
	PL:  CountryAlpha2("PL"),
	PT:  CountryAlpha2("PT"),
	PR:  CountryAlpha2("PR"),
	QA:  CountryAlpha2("QA"),
	RE:  CountryAlpha2("RE"),
	RO:  CountryAlpha2("RO"),
	RU:  CountryAlpha2("RU"),
	RW:  CountryAlpha2("RW"),
	BL:  CountryAlpha2("BL"),
	SH:  CountryAlpha2("SH"),
	KN:  CountryAlpha2("KN"),
	LC:  CountryAlpha2("LC"),
	MF:  CountryAlpha2("MF"),
	PM:  CountryAlpha2("PM"),
	VC:  CountryAlpha2("VC"),
	WS:  CountryAlpha2("WS"),
	SM:  CountryAlpha2("SM"),
	ST:  CountryAlpha2("ST"),
	SA:  CountryAlpha2("SA"),
	SN:  CountryAlpha2("SN"),
	RS:  CountryAlpha2("RS"),
	SC:  CountryAlpha2("SC"),
	SL:  CountryAlpha2("SL"),
	SG:  CountryAlpha2("SG"),
	SX:  CountryAlpha2("SX"),
	SK:  CountryAlpha2("SK"),
	SI:  CountryAlpha2("SI"),
	SB:  CountryAlpha2("SB"),
	SO:  CountryAlpha2("SO"),
	ZA:  CountryAlpha2("ZA"),
	GS:  CountryAlpha2("GS"),
	SS:  CountryAlpha2("SS"),
	ES:  CountryAlpha2("ES"),
	LK:  CountryAlpha2("LK"),
	SD:  CountryAlpha2("SD"),
	SR:  CountryAlpha2("SR"),
	SJ:  CountryAlpha2("SJ"),
	SE:  CountryAlpha2("SE"),
	CH:  CountryAlpha2("CH"),
	SY:  CountryAlpha2("SY"),
	TW:  CountryAlpha2("TW"),
	TJ:  CountryAlpha2("TJ"),
	TZ:  CountryAlpha2("TZ"),
	TH:  CountryAlpha2("TH"),
	TL:  CountryAlpha2("TL"),
	TG:  CountryAlpha2("TG"),
	TK:  CountryAlpha2("TK"),
	TO:  CountryAlpha2("TO"),
	TT:  CountryAlpha2("TT"),
	TN:  CountryAlpha2("TN"),
	TR:  CountryAlpha2("TR"),
	TM:  CountryAlpha2("TM"),
	TC:  CountryAlpha2("TC"),
	TV:  CountryAlpha2("TV"),
	UG:  CountryAlpha2("UG"),
	UA:  CountryAlpha2("UA"),
	AE:  CountryAlpha2("AE"),
	GB:  CountryAlpha2("GB"),
	UM:  CountryAlpha2("UM"),
	US:  CountryAlpha2("US"),
	UY:  CountryAlpha2("UY"),
	UZ:  CountryAlpha2("UZ"),
	VU:  CountryAlpha2("VU"),
	VE:  CountryAlpha2("VE"),
	VN:  CountryAlpha2("VN"),
	VG:  CountryAlpha2("VG"),
	VI:  CountryAlpha2("VI"),
	WF:  CountryAlpha2("WF"),
	EH:  CountryAlpha2("EH"),
	YE:  CountryAlpha2("YE"),
	ZM:  CountryAlpha2("ZM"),
	ZW:  CountryAlpha2("ZW"),
	Err: fmt.Errorf("invalid CountryAlpha2"),
}

func init() {
	CountryAlpha2s.Values = []CountryAlpha2{
		CountryAlpha2s.AF,
		CountryAlpha2s.AX,
		CountryAlpha2s.DZ,
		CountryAlpha2s.AS,
		CountryAlpha2s.AD,
		CountryAlpha2s.AO,
		CountryAlpha2s.AI,
		CountryAlpha2s.AQ,
		CountryAlpha2s.AG,
		CountryAlpha2s.AR,
		CountryAlpha2s.AM,
		CountryAlpha2s.AW,
		CountryAlpha2s.AU,
		CountryAlpha2s.AT,
		CountryAlpha2s.AZ,
		CountryAlpha2s.BS,
		CountryAlpha2s.BD,
		CountryAlpha2s.BB,
		CountryAlpha2s.BY,
		CountryAlpha2s.BE,
		CountryAlpha2s.BZ,
		CountryAlpha2s.BJ,
		CountryAlpha2s.BM,
		CountryAlpha2s.BT,
		CountryAlpha2s.BO,
		CountryAlpha2s.BQ,
		CountryAlpha2s.BA,
		CountryAlpha2s.BW,
		CountryAlpha2s.BV,
		CountryAlpha2s.BR,
		CountryAlpha2s.IO,
		CountryAlpha2s.BN,
		CountryAlpha2s.BG,
		CountryAlpha2s.BF,
		CountryAlpha2s.BI,
		CountryAlpha2s.CV,
		CountryAlpha2s.KH,
		CountryAlpha2s.CM,
		CountryAlpha2s.CA,
		CountryAlpha2s.KY,
		CountryAlpha2s.CF,
		CountryAlpha2s.TD,
		CountryAlpha2s.CL,
		CountryAlpha2s.CN,
		CountryAlpha2s.CX,
		CountryAlpha2s.CC,
		CountryAlpha2s.CO,
		CountryAlpha2s.KM,
		CountryAlpha2s.CG,
		CountryAlpha2s.CD,
		CountryAlpha2s.CK,
		CountryAlpha2s.CR,
		CountryAlpha2s.CI,
		CountryAlpha2s.HR,
		CountryAlpha2s.CU,
		CountryAlpha2s.CW,
		CountryAlpha2s.CY,
		CountryAlpha2s.CZ,
		CountryAlpha2s.DK,
		CountryAlpha2s.DJ,
		CountryAlpha2s.DM,
		CountryAlpha2s.DO,
		CountryAlpha2s.EC,
		CountryAlpha2s.EG,
		CountryAlpha2s.SV,
		CountryAlpha2s.GQ,
		CountryAlpha2s.ER,
		CountryAlpha2s.EE,
		CountryAlpha2s.SZ,
		CountryAlpha2s.ET,
		CountryAlpha2s.FK,
		CountryAlpha2s.FO,
		CountryAlpha2s.FJ,
		CountryAlpha2s.FI,
		CountryAlpha2s.FR,
		CountryAlpha2s.GF,
		CountryAlpha2s.PF,
		CountryAlpha2s.TF,
		CountryAlpha2s.GA,
		CountryAlpha2s.GM,
		CountryAlpha2s.GE,
		CountryAlpha2s.DE,
		CountryAlpha2s.GH,
		CountryAlpha2s.GI,
		CountryAlpha2s.GR,
		CountryAlpha2s.GL,
		CountryAlpha2s.GD,
		CountryAlpha2s.GP,
		CountryAlpha2s.GU,
		CountryAlpha2s.GT,
		CountryAlpha2s.GG,
		CountryAlpha2s.GN,
		CountryAlpha2s.GW,
		CountryAlpha2s.GY,
		CountryAlpha2s.HT,
		CountryAlpha2s.HM,
		CountryAlpha2s.VA,
		CountryAlpha2s.HN,
		CountryAlpha2s.HK,
		CountryAlpha2s.HU,
		CountryAlpha2s.IS,
		CountryAlpha2s.IN,
		CountryAlpha2s.ID,
		CountryAlpha2s.IR,
		CountryAlpha2s.IQ,
		CountryAlpha2s.IE,
		CountryAlpha2s.IM,
		CountryAlpha2s.IL,
		CountryAlpha2s.IT,
		CountryAlpha2s.JM,
		CountryAlpha2s.JP,
		CountryAlpha2s.JE,
		CountryAlpha2s.JO,
		CountryAlpha2s.KZ,
		CountryAlpha2s.KE,
		CountryAlpha2s.KI,
		CountryAlpha2s.KP,
		CountryAlpha2s.KR,
		CountryAlpha2s.KW,
		CountryAlpha2s.KG,
		CountryAlpha2s.LA,
		CountryAlpha2s.LV,
		CountryAlpha2s.LB,
		CountryAlpha2s.LS,
		CountryAlpha2s.LR,
		CountryAlpha2s.LY,
		CountryAlpha2s.LI,
		CountryAlpha2s.LT,
		CountryAlpha2s.LU,
		CountryAlpha2s.MO,
		CountryAlpha2s.MG,
		CountryAlpha2s.MW,
		CountryAlpha2s.MY,
		CountryAlpha2s.MV,
		CountryAlpha2s.ML,
		CountryAlpha2s.MT,
		CountryAlpha2s.MH,
		CountryAlpha2s.MQ,
		CountryAlpha2s.MR,
		CountryAlpha2s.MU,
		CountryAlpha2s.YT,
		CountryAlpha2s.MX,
		CountryAlpha2s.FM,
		CountryAlpha2s.MD,
		CountryAlpha2s.MC,
		CountryAlpha2s.MN,
		CountryAlpha2s.ME,
		CountryAlpha2s.MS,
		CountryAlpha2s.MA,
		CountryAlpha2s.MZ,
		CountryAlpha2s.MM,
		CountryAlpha2s.NA,
		CountryAlpha2s.NR,
		CountryAlpha2s.NP,
		CountryAlpha2s.NL,
		CountryAlpha2s.NC,
		CountryAlpha2s.NZ,
		CountryAlpha2s.NI,
		CountryAlpha2s.NE,
		CountryAlpha2s.NG,
		CountryAlpha2s.NU,
		CountryAlpha2s.NF,
		CountryAlpha2s.MK,
		CountryAlpha2s.MP,
		CountryAlpha2s.NO,
		CountryAlpha2s.OM,
		CountryAlpha2s.PK,
		CountryAlpha2s.PW,
		CountryAlpha2s.PS,
		CountryAlpha2s.PA,
		CountryAlpha2s.PG,
		CountryAlpha2s.PY,
		CountryAlpha2s.PE,
		CountryAlpha2s.PH,
		CountryAlpha2s.PN,
		CountryAlpha2s.PL,
		CountryAlpha2s.PT,
		CountryAlpha2s.PR,
		CountryAlpha2s.QA,
		CountryAlpha2s.RE,
		CountryAlpha2s.RO,
		CountryAlpha2s.RU,
		CountryAlpha2s.RW,
		CountryAlpha2s.BL,
		CountryAlpha2s.SH,
		CountryAlpha2s.KN,
		CountryAlpha2s.LC,
		CountryAlpha2s.MF,
		CountryAlpha2s.PM,
		CountryAlpha2s.VC,
		CountryAlpha2s.WS,
		CountryAlpha2s.SM,
		CountryAlpha2s.ST,
		CountryAlpha2s.SA,
		CountryAlpha2s.SN,
		CountryAlpha2s.RS,
		CountryAlpha2s.SC,
		CountryAlpha2s.SL,
		CountryAlpha2s.SG,
		CountryAlpha2s.SX,
		CountryAlpha2s.SK,
		CountryAlpha2s.SI,
		CountryAlpha2s.SB,
		CountryAlpha2s.SO,
		CountryAlpha2s.ZA,
		CountryAlpha2s.GS,
		CountryAlpha2s.SS,
		CountryAlpha2s.ES,
		CountryAlpha2s.LK,
		CountryAlpha2s.SD,
		CountryAlpha2s.SR,
		CountryAlpha2s.SJ,
		CountryAlpha2s.SE,
		CountryAlpha2s.CH,
		CountryAlpha2s.SY,
		CountryAlpha2s.TW,
		CountryAlpha2s.TJ,
		CountryAlpha2s.TZ,
		CountryAlpha2s.TH,
		CountryAlpha2s.TL,
		CountryAlpha2s.TG,
		CountryAlpha2s.TK,
		CountryAlpha2s.TO,
		CountryAlpha2s.TT,
		CountryAlpha2s.TN,
		CountryAlpha2s.TR,
		CountryAlpha2s.TM,
		CountryAlpha2s.TC,
		CountryAlpha2s.TV,
		CountryAlpha2s.UG,
		CountryAlpha2s.UA,
		CountryAlpha2s.AE,
		CountryAlpha2s.GB,
		CountryAlpha2s.UM,
		CountryAlpha2s.US,
		CountryAlpha2s.UY,
		CountryAlpha2s.UZ,
		CountryAlpha2s.VU,
		CountryAlpha2s.VE,
		CountryAlpha2s.VN,
		CountryAlpha2s.VG,
		CountryAlpha2s.VI,
		CountryAlpha2s.WF,
		CountryAlpha2s.EH,
		CountryAlpha2s.YE,
		CountryAlpha2s.ZM,
		CountryAlpha2s.ZW,
	}
}

func (t countryAlpha2s) newErr(a any, values ...CountryAlpha2) error {
	return fmt.Errorf(
		"invalid %w value '%v'. Must be one of %v",
		CountryAlpha2s.Err,
		a,
		enumer.Join(values, ", "),
	)
}

func (t countryAlpha2s) ParseFrom(v string, values ...CountryAlpha2) (CountryAlpha2, error) {
	var found CountryAlpha2
	var ok bool

	for _, value := range values {
		if enumer.IsEq[string, CountryAlpha2](v)(value) {
			found = value
			ok = true
			break
		}
	}

	if !ok {
		return found, t.newErr(v, values...)
	}

	return found, nil
}

func (t countryAlpha2s) Parse(v string) (CountryAlpha2, error) {
	return t.ParseFrom(v, CountryAlpha2s.Values...)
}

func (t countryAlpha2s) IsFrom(v string, values ...CountryAlpha2) bool {
	for _, value := range values {
		if enumer.IsEq[string, CountryAlpha2](v)(value) {
			return true
		}
	}
	return false
}

func (t countryAlpha2s) Is(v string) bool {
	return t.IsFrom(v, CountryAlpha2s.Values...)
}
