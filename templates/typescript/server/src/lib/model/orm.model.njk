import { EntitySchema } from "typeorm";
import { {{ obj | idType }} } from "./{{ obj | idType }}.class";

{% macro field(prop) -%}
{%- if prop.type == 'string' -%}
    {%- if prop.format == 'date' -%}
    date
    {%- elif prop.format == 'date-time' -%}
    datetime
    {%- else -%}
    string
    {%- endif -%}
{%- else -%}
{{- prop.type -}}
{%- endif -%}
{% endmacro %}

export const {{ obj | idType }}Entity = new EntitySchema<{{ obj | idType }}>({
    name: '{{ obj | idType }}',
    columns: {
    {%- for name, prop in obj.properties %}
    {%- if not isRelation(prop) %}
        {{ name }}: {
            {% if prop.persistence.primary -%}primary: {{ prop.persistence.primary }},{%- endif %}
            type: '{{ field(prop) }}',
            nullable: {% if isRequired(name) %}false{% else %}true{% endif %},
            length: {% if prop.maxLength %}{{ prop.maxLength }}{% else %}100{% endif %},
        },
    {%- endif %}
    {%- endfor %}
    },
    relations: {
    {%- for name, prop in obj.properties %}
    {%- if isRelation(prop) %}
        {{ name }}: {
            type: '{{ prop.persistence.relation }}',
            target: '{{ prop | idType }}',
        },
    {%- endif %}
    {%- endfor %}
    },
})