[[if .Description -]]
/** 
 * [[ .Description ]]
 */
[[end -]]
export type [[template "NAME" .]] = string;

[[if .HasValidation -]]
/**
 * Validate validates the [[template "NAME" .]] type.
 *
 * @param v [[template "NAME" .]]
 *
 * @throws an error if validation fails
 */
export function validate[[template "NAME" .]](v: [[template "NAME" .]]) {
    [[if .Min.Defined -]]
    if(v.length < [[ .Min ]]) {
        throw new Error(`${v} is less than the minimum of [[ .Min ]]`);
    }
    [[end]]
    [[if .Max.Defined -]]
    if(v.length < [[ .Max ]]) {
        throw new Error(`${v} is less than the maximum of [[ .Max ]]`);
    }
    [[end]]
    [[if .Max.Defined -]]
    if(!regex.test(v)) {
        throw new Error(`'${v}' doesn't match '[[ .Regex ]]'`);
    }
    [[end]]
}
[[ end -]]

[[if .Regex.Defined]]
const regex = /[[ .Regex ]]/;
[[end -]]

[[- define "NAME" -]]
    [[ .Name | BASE | PASCAL ]]
[[- end ]]